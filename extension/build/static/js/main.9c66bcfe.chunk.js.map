{
  "version": 3,
  "sources": [
    "pages/SignUp.js",
    "pages/Login.js",
    "App.js",
    "index.js"
  ],
  "names": [
    "SignUp",
    "props",
    "useState",
    "email",
    "setEmail",
    "username",
    "setUsername",
    "password",
    "setPassword",
    "passwordConf",
    "setPasswordConf",
    "id",
    "Form",
    "onSubmit",
    "data",
    "url",
    "a",
    "async",
    "fetch",
    "method",
    "headers",
    "body",
    "JSON",
    "stringify",
    "post",
    "Group",
    "controlId",
    "Label",
    "Control",
    "type",
    "placeholder",
    "value",
    "onChange",
    "e",
    "target",
    "required",
    "autoFocus",
    "Text",
    "Button",
    "variant",
    "disabled",
    "length",
    "Login",
    "style",
    "container",
    "textAlign",
    "button",
    "borderRadius",
    "Prompt",
    "size",
    "onClick",
    "setPage",
    "App",
    "page",
    "root",
    "document",
    "getElementById",
    "ReactDOM",
    "render"
  ],
  "mappings": "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",
  "file": "static/js/main.9c66bcfe.chunk.js",
  "sourcesContent": [
    "import React, {useState} from 'react';\nimport {Button, Form} from 'react-bootstrap';\n\n\nasync function post(url, data) {\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n}\n\nconst SignUp = (props) => {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConf, setPasswordConf] = useState('');\n  \n  const ip = '192.168.1.37';\n  const port = '3000';\n\n\n  const validateForm = () => {\n    return email.length > 0 \n           && password.length >= 6 \n           && password === passwordConf;\n  };\n\n  const submitForm = () => {\n    const data = {\n      email: email,\n      username: username,\n      password: password,\n      passwordConf: passwordConf\n    };\n\n    post(`https://${ip}:${port}/signUp`, data);\n  };\n\n  return (\n    <div id=\"signUp\">\n      <Form onSubmit={submitForm}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\"\n                        value={email} onChange={e => setEmail(e.target.value)}\n                        required autoFocus/>\n          <Form.Text>Some random text here</Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"username\"\n                        value={username} onChange={e => setUsername(e.target.value)}\n                        required/>\n        </Form.Group>\n        \n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"password\"\n                        value={password} onChange={e => setPassword(e.target.value)}\n                        required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"passwordConf\">\n          <Form.Label>Confirm password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Confirm password\"\n                        value={passwordConf} onChange={e => setPasswordConf(e.target.value)}\n                        required/>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" disabled={!validateForm()}>Sign Up</Button>\n      </Form>\n    </div>\n  );\n\n};\n\nexport default SignUp;",
    "import React, {useState} from 'react';\nimport {Button, Form} from 'react-bootstrap';\n\n\nasync function post(url, data) {\n  return await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  });\n}\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  \n  const ip = '192.168.1.37';\n  const port = '3000';\n\n\n  const validateForm = () => {\n    return username.length > 0 \n           && password.length >= 6;\n  };\n\n  const submitForm = () => {\n    const data = {\n      username: username,\n      password: password\n    };\n\n    post(`https://${ip}:${port}/login`, data);\n  };\n\n  return (\n    <div id=\"signUp\">\n      <Form onSubmit={submitForm}>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"username\" autoFocus\n                        value={username} onChange={e => setUsername(e.target.value)}\n                        required/>\n        </Form.Group>\n        \n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"password\"\n                        value={password} onChange={e => setPassword(e.target.value)}\n                        required/>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" disabled={!validateForm()}>Sign Up</Button>\n      </Form>\n    </div>\n  );\n\n};\n\nexport default Login;",
    "import React, {useState} from 'react';\nimport {Button} from 'react-bootstrap';\nimport SignUp from './pages/SignUp.js';\nimport Login from './pages/Login.js';\n\n\nconst style = {\n  container: {\n    textAlign: 'center'\n  },\n  button: {\n    borderRadius: '0px'\n  }\n};\n\nconst Prompt = (props) => {\n  return (\n  <div id=\"prompt\" style={style.container}>\n    <Button variant=\"outline-dark\" size=\"sm\" style={style.button}\n            onClick={() => props.setPage('signUp')}>Sign up</Button>\n    <Button variant=\"outline-dark\" size=\"sm\" style={style.button}\n            onClick={() => props.setPage('login')}>Login</Button>\n  </div>\n  );\n};\n\nconst App = function(props) {\n  const [page, setPage] = useState('signUp');\n\n  return (\n    <div>\n      <Prompt setPage={setPage}/>\n      {page === 'signUp' && <SignUp/>}\n      {page === 'login' && <Login/>}\n    </div>\n  );\n};\n\nexport default App;",
    "import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js'\r\n\r\nconst root = document.getElementById('root');\r\nReactDOM.render(<App/>, root);"
  ],
  "sourceRoot": ""
}