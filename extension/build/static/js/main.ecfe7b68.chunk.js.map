{"version":3,"sources":["pages/SignUp.js","pages/Login.js","pages/Prompt.js","pages/LoggedIn.js","App.js","index.js"],"names":["post","url","data","Promise","resolve","reject","a","async","fetch","method","headers","body","JSON","stringify","response","json","console","log","message","SignUp","props","useState","email","setEmail","username","setUsername","password","setPassword","passwordConf","setPasswordConf","id","Form","onSubmit","event","preventDefault","state","setLoggedIn","Group","controlId","Label","Control","type","placeholder","value","onChange","e","target","required","autoFocus","Text","Button","variant","disabled","length","Login","validated","setValidated","noValidate","res","Feedback","style","container","textAlign","button","borderRadius","Prompt","size","onClick","setPage","LoggedIn","Jumbotron","fluid","App","page","loggedIn","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.ecfe7b68.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport {Button, Form} from 'react-bootstrap';\n\n\nfunction post(url, data) {\n  return new Promise(async(resolve, reject) => {\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      resolve(response.json());\n    } catch (err) {\n      console.log('post err: ' + err.message);\n      reject(err);\n    }\n  });\n}\n\nconst SignUp = (props) => {\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [passwordConf, setPasswordConf] = useState('');\n  \n  const ip = '192.168.1.37';\n  const port = '3000';\n\n\n  const validateForm = () => {\n    return email.length > 0 \n           && password.length >= 6 \n           && password === passwordConf;\n  };\n\n  const submitForm = async (event) => {\n    event.preventDefault();\n    const data = {\n      email: email,\n      username: username,\n      password: password,\n      passwordConf: passwordConf\n    };\n\n    const res = await post(`https://${ip}:${port}/signUp`, data);\n    if (res.state === 'success') {\n      props.setLoggedIn(true);\n    }\n  };\n\n  return (\n    <div id=\"signUp\">\n      <Form onSubmit={submitForm}>\n        <Form.Group controlId=\"email\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\"\n                        value={email} onChange={e => setEmail(e.target.value)}\n                        required autoFocus/>\n          <Form.Text>Some random text here</Form.Text>\n        </Form.Group>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"username\"\n                        value={username} onChange={e => setUsername(e.target.value)}\n                        required/>\n        </Form.Group>\n        \n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"password\"\n                        value={password} onChange={e => setPassword(e.target.value)}\n                        required/>\n        </Form.Group>\n\n        <Form.Group controlId=\"passwordConf\">\n          <Form.Label>Confirm password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"Confirm password\"\n                        value={passwordConf} onChange={e => setPasswordConf(e.target.value)}\n                        required/>\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\" disabled={!validateForm()}>Sign Up</Button>\n      </Form>\n    </div>\n  );\n\n};\n\nexport default SignUp;","import React, {useState} from 'react';\nimport {Button, Form} from 'react-bootstrap';\n\n\nfunction post(url, data) {\n  return new Promise(async(resolve, reject) => {\n    try {\n      const response = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(data)\n      });\n      resolve(response.json());\n    } catch (err) {\n      console.log('post err: ' + err.message);\n      reject(err);\n    }\n  });\n}\n\nconst Login = (props) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const [validated, setValidated] = useState(false);\n  \n  const ip = '192.168.1.37';\n  const port = '3000';\n\n  const submitForm = async (event) => {\n    event.preventDefault();\n    const data = {\n      username: username,\n      password: password\n    };\n\n    //post to server and wait for response\n    const res = await post(`https://${ip}:${port}/login`, data);\n    if (res.state === 'success') {\n      props.setLoggedIn(true);\n      setValidated(true);\n    } else if (res.state === 'Incorrect password' \n               || res.state === 'User not found') {\n      setUsername('');\n      setPassword('');\n      setValidated(false);\n    } else {\n      console.log('error: ' + res.state);\n      setValidated(false);\n    }\n  };\n\n  //TODO form invalid display doesn't work rn\n  return (\n    <div id=\"login\">\n      <Form noValidate validated={validated} onSubmit={submitForm}>\n\n        <Form.Group controlId=\"username\">\n          <Form.Label>Username</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"username\" autoFocus\n                        value={username} onChange={e => setUsername(e.target.value)}\n                        required/>\n          <Form.Control.Feedback type=\"invalid\">\n            Incorrect username or password.\n          </Form.Control.Feedback>\n        </Form.Group>\n        \n        <Form.Group controlId=\"password\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"password\" placeholder=\"password\"\n                        value={password} onChange={e => setPassword(e.target.value)}\n                        required/>\n        </Form.Group>\n\n        <Button variant=\"primary\" \n                type=\"submit\">\n          Log in\n        </Button>\n      </Form>\n    </div>\n  );\n\n};\n\nexport default Login;","import React from 'react';\nimport {Button} from 'react-bootstrap';\n\nconst style = {\n  container: {\n    textAlign: 'center'\n  },\n  button: {\n    borderRadius: '0px'\n  }\n};\n\nconst Prompt = (props) => {\n  return (\n  <div id=\"prompt\" style={style.container}>\n    <Button variant=\"outline-dark\" size=\"sm\" style={style.button}\n            onClick={() => props.setPage('signUp')}>Sign up</Button>\n    <Button variant=\"outline-dark\" size=\"sm\" style={style.button}\n            onClick={() => props.setPage('login')}>Login</Button>\n  </div>\n  );\n};\n\nexport default Prompt;","import React from 'react';\nimport {Jumbotron} from 'react-bootstrap';\n\n\nconst style = {\n  textAlign: 'center'\n};\n\nconst LoggedIn = props => {\n  return (\n    <Jumbotron fluid style={style}>\n        <h1>Logged In!</h1>\n    </Jumbotron>\n  );\n};\n\nexport default LoggedIn;","import React, {useState} from 'react';\nimport SignUp from './pages/SignUp.js';\nimport Login from './pages/Login.js';\nimport Prompt from './pages/Prompt.js';\nimport LoggedIn from './pages/LoggedIn.js';\n\n\n\nconst App = function(props) {\n  const [page, setPage] = useState('signUp');\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  const renderContent = () => {\n    if (loggedIn) {\n      return <LoggedIn/>;\n    }\n    return (\n      <div>\n        <Prompt setPage={setPage}/>\n        {page === 'signUp' && <SignUp setLoggedIn={setLoggedIn}/>}\n        {page === 'login' && <Login setLoggedIn={setLoggedIn}/>}\n      </div>\n    );\n  };\n\n  return renderContent();\n};\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.js'\r\n\r\nconst root = document.getElementById('root');\r\nReactDOM.render(<App/>, root);"],"sourceRoot":""}